plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    compileSdkVersion 34

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 14
        versionName "1.1.10"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    //引入依赖路径
    repositories {
        flatDir {
            dirs 'libs'
        }
    }

}

def jarName = "AILinkSDKOtaLibraryAndroid.jar"
task makeJar(type: Jar) {
    delete 'build/libs/' + jarName
    from zipTree("build/intermediates/compile_library_classes_jar/release/classes.jar")
    from fileTree(dir: 'src/main/java') //需要保留的资源文件,源码等
    archiveName = jarName
    destinationDir = file('build/libs')
}
makeJar.dependsOn(build)


dependencies {
//    implementation fileTree(dir: "libs", include: ['*.jar'])
    implementation 'com.github.elinkthings:AILinkSDKRepositoryAndroid:1.15.01'

    //杰理OTA库
    implementation(name: 'jl_bt_ota_V1.9.2-release', ext: 'aar')
    //杰理rcsp基础库
    implementation(name: 'jl_rcsp_V0.5.1-release', ext: 'aar')
    //图像转换相关
    implementation(name: 'BmpConvert_V1.2.0-release', ext: 'aar')
    //杰理健康相关
    implementation(name: 'JL_Watch_V1.9.1-release', ext: 'aar')
    implementation(name: 'rtkOtaLib-release', ext: 'aar')

}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = 'com.github.elinkthings'
                artifactId = 'AILinkSDKOtaLibraryAndroid'
                version = "1.1.10"

                // 发布生成的 AAR 文件
                artifact("$buildDir/outputs/aar/${project.name}-release.aar")
                // 添加 AAR 依赖到 POM
                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    // 为每个 AAR 依赖添加
                    def jl_bt_ota = dependenciesNode.appendNode('dependency')
                    jl_bt_ota.appendNode('groupId', "com.jieli")
                    jl_bt_ota.appendNode('artifactId', "jl_bt_ota")
                    jl_bt_ota.appendNode('version', "1.9.2")

                    def jl_rcsp = dependenciesNode.appendNode('dependency')
                    jl_rcsp.appendNode('groupId', "com.jieli")
                    jl_rcsp.appendNode('artifactId', "jl_rcsp")
                    jl_rcsp.appendNode('version', "0.5.1")

                    def BmpConvert = dependenciesNode.appendNode('dependency')
                    BmpConvert.appendNode('groupId', "com.jieli")
                    BmpConvert.appendNode('artifactId', "BmpConvert")
                    BmpConvert.appendNode('version', "1.2.0")

                    def JL_Watch = dependenciesNode.appendNode('dependency')
                    JL_Watch.appendNode('groupId', "com.jieli")
                    JL_Watch.appendNode('artifactId', "JL_Watch")
                    JL_Watch.appendNode('version', "1.9.1")

                    def rtkOtaLib = dependenciesNode.appendNode('dependency')
                    rtkOtaLib.appendNode('groupId', "com.jieli")
                    rtkOtaLib.appendNode('artifactId', "rtkOtaLib")
                    rtkOtaLib.appendNode('version', "1.0.0")
                }
            }
        }
    }
}